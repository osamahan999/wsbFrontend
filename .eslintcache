[{"/home/osama/projects/wsb/frontend/src/index.tsx":"1","/home/osama/projects/wsb/frontend/src/reportWebVitals.ts":"2","/home/osama/projects/wsb/frontend/src/App.tsx":"3","/home/osama/projects/wsb/frontend/src/helper.tsx":"4","/home/osama/projects/wsb/frontend/src/pages/Home/Home.tsx":"5","/home/osama/projects/wsb/frontend/src/pages/UserFeed/UserFeed.tsx":"6","/home/osama/projects/wsb/frontend/src/pages/Login/Login.tsx":"7","/home/osama/projects/wsb/frontend/src/pages/Register/Register.tsx":"8","/home/osama/projects/wsb/frontend/src/pages/Stock/Stock.tsx":"9","/home/osama/projects/wsb/frontend/src/components/navbar/Navbar.jsx":"10","/home/osama/projects/wsb/frontend/src/components/sidefiller/SidefillerRight.jsx":"11","/home/osama/projects/wsb/frontend/src/components/sidefiller/SidefillerLeft.jsx":"12","/home/osama/projects/wsb/frontend/src/components/sellbutton/Sell.tsx":"13"},{"size":500,"mtime":1610154779278,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1610154779278,"results":"16","hashOfConfig":"15"},{"size":3622,"mtime":1610154779246,"results":"17","hashOfConfig":"15"},{"size":525,"mtime":1610154779278,"results":"18","hashOfConfig":"15"},{"size":1276,"mtime":1610154779278,"results":"19","hashOfConfig":"15"},{"size":3036,"mtime":1610158485595,"results":"20","hashOfConfig":"15"},{"size":2868,"mtime":1610154779278,"results":"21","hashOfConfig":"15"},{"size":2371,"mtime":1610154779278,"results":"22","hashOfConfig":"15"},{"size":20279,"mtime":1610288273299,"results":"23","hashOfConfig":"15"},{"size":1633,"mtime":1610154779274,"results":"24","hashOfConfig":"15"},{"size":220,"mtime":1610154779278,"results":"25","hashOfConfig":"15"},{"size":218,"mtime":1610158453903,"results":"26","hashOfConfig":"15"},{"size":2648,"mtime":1610287834656,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"upimto",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"30"},"/home/osama/projects/wsb/frontend/src/index.tsx",[],["64","65"],"/home/osama/projects/wsb/frontend/src/reportWebVitals.ts",[],"/home/osama/projects/wsb/frontend/src/App.tsx",["66","67","68","69","70","71","72","73","74"],"import React, { useEffect, useState } from 'react';\nimport Navbar from './components/navbar/Navbar';\n\nimport styles from \"./App.module.css\";\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport Register from './pages/Register/Register';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport UserFeed from './pages/UserFeed/UserFeed';\nimport Stock from './pages/Stock/Stock';\n\nconst cookieToken = require('./helper');\n\nconst axios = require('axios');\n\nfunction App() {\n\n  const [currentPage, setCurrentPage] = useState('home');\n\n  const [currentUser, setCurrentUser] = useState<JSON | any>({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //for when logging out \n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const [currentStockInFocus, setCurrentStockInFocus] = useState<string>();\n\n  useEffect(() => {\n\n    let token = cookieToken.getToken();\n\n    if (token != 'fail') {\n      setIsLoading(true);\n\n      logIn(token);\n\n    }\n  }, [])\n\n\n  const logIn = (token: string) => {\n\n    axios.post(\"http://localhost:5000/user/loginWithToken\", {\n      token: token\n\n    }).then((response: AxiosResponse) => {\n      setCurrentUser(response.data[0]);\n      setCurrentPage('userfeed');\n      setIsLoggedIn(true);\n\n      setIsLoading(false);\n\n    }).catch((err: AxiosError) => {\n      alert(err);\n      setIsLoading(false);\n\n    })\n  }\n\n  /**\n   * Just like logIn, except does no updates except to currentUser\n   * @param token \n   */\n  const updateNavbar = (token: string) => {\n    axios.post(\"http://localhost:5000/user/loginWithToken\", {\n      token: token\n\n    }).then((response: AxiosResponse) => {\n      setCurrentUser(response.data[0]);\n\n    }).catch((err: AxiosError) => {\n      alert(err);\n\n    })\n  }\n\n  //can be deleted now?\n  useEffect(() => {\n\n\n    if (JSON.stringify(currentUser) == '{}') {\n      setCurrentPage('home')\n      setIsLoggedIn(false);\n\n    } else if (currentPage == 'stock') {\n      setIsLoggedIn(true);\n\n    } else {\n      setCurrentPage('userfeed');\n      setIsLoggedIn(true);\n    }\n\n\n  }, [currentUser])\n\n\n\n\n\n  const logout = () => {\n    let token = cookieToken.getToken();\n\n    setIsLoading(true);\n\n    axios.post(\"http://localhost:5000/user/logout\", {\n      token: token\n\n    }).then((response: AxiosResponse) => {\n      document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\n      setCurrentUser({});\n      setIsLoggedIn(false);\n      setCurrentPage('home');\n      setIsLoading(false);\n\n    }).catch((err: AxiosError) => {\n      alert(err.response);\n      setIsLoading(false);\n\n    })\n  }\n\n  if (isLoading) return (<div className={styles.LoadingDiv}>Loading</div>);\n\n  return (\n    <div className={styles.App}>\n      <Navbar isLoggedIn={isLoggedIn}\n        currentUser={currentUser}\n        logOut={() => logout()}\n        currentPage={currentPage}\n        setCurrentPage={(e: string) => setCurrentPage(e)}\n      />\n      <div>\n        {currentPage == \"home\" && <Home />}\n\n\n        {currentPage == \"login\" && <Login setUser={(e: JSON) => setCurrentUser(e)} />}\n        {currentPage == \"register\" && <Register />}\n\n        {currentPage == \"userfeed\" &&\n          <UserFeed\n            user={currentUser}\n            setCurrentStock={(e: string) => setCurrentStockInFocus(e)}\n            setCurrentPage={(e: string) => setCurrentPage(e)}\n          />}\n        {currentPage == \"stock\" &&\n          <Stock stock={currentStockInFocus}\n            updateNavbar={() => updateNavbar(cookieToken.getToken())}\n            currentUser={currentUser}\n          />\n        }\n\n      </div>\n\n\n\n    </div>\n  );\n}\n\n\nexport default App;\n","/home/osama/projects/wsb/frontend/src/helper.tsx",["75","76"],"/**\n * Returns the token from the cookies\n * or fail if no cookie with token\n */\nconst getToken = () => {\n\n    let cookies = document.cookie.split(';');\n    let ret = '';\n\n    if (cookies[0] != \"\") {\n        cookies.forEach((keyPair) => {\n            let subArray: Array<string> = keyPair.split('=');\n            let key: string = subArray[0].trim();\n            let value: string = subArray[1].trim();\n\n            if (key == \"token\") ret = value;\n        })\n    } else return 'fail';\n\n    return ret;\n}\n\nexport { getToken }","/home/osama/projects/wsb/frontend/src/pages/Home/Home.tsx",["77","78","79"],"import React from 'react';\nimport SidefillerLeft from '../../components/sidefiller/SidefillerLeft';\nimport SidefillerRight from '../../components/sidefiller/SidefillerRight';\nimport Carousel from 'react-elastic-carousel';\n\nimport styles from './Home.module.css';\n\nimport GTO from '../../assets/grandtheftoptions.png';\nimport deskImage from '../../assets/deskImage.webp';\nimport stonksgoup from '../../assets/stonksgoup.jpeg';\n\nfunction Home() {\n  return (\n    <div className={styles.Home}>\n\n\n      <SidefillerLeft />\n\n      <div className={styles.Content}>\n\n        <Carousel>\n          <div className={styles.CarouselDiv}>\n            <div>Welcome to <b>Wallstreet Bets Tycoon</b></div>\n            <img className={styles.Image} src={GTO}></img>\n\n          </div>\n\n          <div className={styles.CarouselDiv}>\n            <div>Why use Robinhood which crashes all the time when you can use this site?</div>\n            <img className={styles.Image} src={deskImage}></img>\n\n          </div>\n\n          <div className={styles.CarouselDiv}>\n            <div>This could be you!</div>\n            <img className={styles.Image} src={stonksgoup}></img>\n\n          </div>\n\n\n\n        </Carousel>\n\n\n\n\n\n\n      </div>\n\n      <SidefillerRight />\n\n    </div>\n  );\n}\n\nexport default Home;\n","/home/osama/projects/wsb/frontend/src/pages/UserFeed/UserFeed.tsx",["80","81","82","83","84","85"],"import { AxiosError, AxiosResponse } from 'axios';\nimport React, { useEffect, useState } from 'react';\n\n\nimport SidefillerLeft from '../../components/sidefiller/SidefillerLeft';\nimport SidefillerRight from '../../components/sidefiller/SidefillerRight';\n\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport styles from './UserFeed.module.css';\nimport { TextField } from '@material-ui/core';\n\nconst axios = require('axios');\n\n\nfunction UserFeed(props: any) {\n\n    const [username, setUsername] = useState('');\n    const [totalMoney, setTotalMoney] = useState(0);\n    const [userId, setUserId] = useState(-1);\n\n    const [searchInput, setSearchInput] = useState('');\n    const [stocksInDropdown, setStocksInDropdown] = useState<any[]>([]);\n\n    useEffect(() => {\n        setUsername(props.user.username);\n        setTotalMoney(props.user.total_money);\n        setUserId(props.user.user_id);\n\n    }, [])\n\n\n    useEffect(() => {\n\n        if (searchInput.length > 0) {\n\n            axios.get(\"http://localhost:5000/stockData/searchBySymbol\", {\n                params: {\n                    'input': searchInput\n                }\n            }).then((response: AxiosResponse) => {\n                (response.data.length == undefined || response.data.length == 0) ? setStocksInDropdown([]) : setStocksInDropdown(response.data);\n            }).catch((err: AxiosError) => {\n                setStocksInDropdown([]);\n\n            })\n        } else {\n            setStocksInDropdown([]);\n        }\n\n    }, [searchInput])\n\n\n\n\n    return (\n\n        <div className={styles.UserFeed}>\n\n            <SidefillerLeft />\n\n\n            <div className={styles.ContentContainer}>\n                {/* search bar */}\n                <div className={styles.SearchbarContainer}>\n\n\n                    <Autocomplete\n                        id=\"combo-box-demo\"\n                        autoComplete={true}\n                        clearOnBlur={false}\n                        options={stocksInDropdown}\n                        filterOptions={(options, state) => options}\n                        freeSolo={true}\n                        getOptionLabel={(option) => option.symbol}\n                        style={{ width: 300 }}\n                        renderInput={(params) =>\n                            <TextField {...params}\n                                label=\"Search by Ticker\"\n                                onChange={(e) => { setSearchInput(e.target.value); }}\n                                variant=\"outlined\"\n                            />\n                        }\n\n                        onChange={(event, value) => {\n                            props.setCurrentStock(value.symbol);\n                        }}\n\n\n                    />\n\n\n                    <button onClick={() => {\n\n\n                        props.setCurrentPage('stock');\n\n                    }}>find yolo</button>\n\n\n                </div>\n\n\n                <div>hi</div>\n            </div>\n            <SidefillerRight />\n\n\n        </div>\n    );\n}\n\nexport default UserFeed;\n","/home/osama/projects/wsb/frontend/src/pages/Login/Login.tsx",["86","87"],"import { AxiosError, AxiosResponse } from 'axios';\nimport React, { useState } from 'react';\n\nimport SidefillerLeft from '../../components/sidefiller/SidefillerLeft';\nimport SidefillerRight from '../../components/sidefiller/SidefillerRight';\n\nimport styles from './Login.module.css';\n\nconst axios = require(\"axios\");\n\nfunction Login(props: any) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState('');\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const handleSubmit = () => {\n        if (username == '' || password == '') setMessage(\"Cannot have empty input\");\n        else {\n\n            //tell client loading \n            setIsLoading(true);\n\n\n            axios.post(\"http://localhost:5000/user/loginWithoutToken\", {\n                username: username,\n                password: password\n\n            }).then((response: AxiosResponse) => {\n                setMessage(\"Success\");\n\n\n                let now = new Date();\n                now.setTime(now.getTime() + (1000 * 3600000)); //lasts 3.6 million seconds\n\n                let cookie = \"token = \" + response.data.token + \"; SameSite=None; Secure; expires=\" + now.toUTCString();\n                document.cookie = cookie;\n                props.setUser(response.data);\n\n                setIsLoading(false);\n\n                //add token and shit to localstorage\n            }).catch((err: AxiosError) => {\n                if (err.response != null) setMessage(err.response.data);\n                setIsLoading(false);\n\n\n            })\n        }\n\n\n\n    }\n\n\n    /**\n     * If isLoading ->\n     *  return (<div> big ass cock</div>)\n     */\n\n    //uhh do i put it here?\n\n    if (isLoading) {\n        return (<div>Logging you In</div>);\n    }\n\n\n\n    return (\n\n        <div className={styles.Login}>\n\n            <SidefillerLeft />\n            <div className={styles.ContentContainer}>\n                <div>\n\n                    <div className={styles.ResponseDiv}>{message}</div>\n                    {/* Username, password */}\n                    <div className={styles.LoginInputsContainer}>\n                        <div className={styles.InputBox}>\n                            <p>Username:</p>\n                            <input onChange={(e) => setUsername(e.target.value)}></input>\n                        </div>\n                        <div className={styles.InputBox}>\n                            <p>Password:</p>\n                            <input onChange={(e) => setPassword(e.target.value)}></input>\n                        </div>\n\n                        <button onClick={() => handleSubmit()} className={styles.LoginButton}>$$$$$</button>\n\n\n\n                    </div>\n\n                </div>\n\n            </div>\n            <SidefillerRight />\n\n\n        </div>\n    );\n}\n\nexport default Login;\n","/home/osama/projects/wsb/frontend/src/pages/Register/Register.tsx",["88","89"],"import { AxiosError, AxiosResponse } from 'axios';\nimport React, { useState } from 'react';\n\nimport SidefillerLeft from '../../components/sidefiller/SidefillerLeft';\nimport SidefillerRight from '../../components/sidefiller/SidefillerRight';\n\n\nimport styles from './Register.module.css';\n\nconst axios = require(\"axios\");\n\nfunction Register(props: any) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = () => {\n        if (username == '' || password == '') setMessage(\"Cannot have empty input\");\n        else {\n            axios.post(\"http://localhost:5000/user/userRegister\", {\n                email: email,\n                username: username,\n                password: password\n\n            }).then((response: AxiosResponse) => {\n                setMessage(response.data);\n            }).catch((err: AxiosError) => {\n                if (err.response != null) setMessage(err.response.data);\n            })\n        }\n\n\n\n    }\n\n    return (\n\n        <div className={styles.Register}>\n\n            <SidefillerLeft />\n            <div className={styles.ContentContainer}>\n                <div>\n\n                    <div className={styles.ResponseDiv}>{message}</div>\n\n                    <div className={styles.RegisterInputsContainer}>\n                        <div className={styles.InputBox}>\n                            <p>Email:</p>\n                            <input type=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                        </div>\n                        <div className={styles.InputBox}>\n                            <p>Username:</p>\n                            <input onChange={(e) => setUsername(e.target.value)}></input>\n                        </div>\n                        <div className={styles.InputBox}>\n                            <p>Password:</p>\n                            <input onChange={(e) => setPassword(e.target.value)}></input>\n                        </div>\n\n                        <button onClick={() => handleSubmit()} className={styles.RegisterButton}>Start losing money now!</button>\n\n\n\n                    </div>\n\n                </div>\n\n            </div>\n            <SidefillerRight />\n\n\n        </div>\n    );\n}\n\nexport default Register;\n","/home/osama/projects/wsb/frontend/src/pages/Stock/Stock.tsx",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112"],"/home/osama/projects/wsb/frontend/src/components/navbar/Navbar.jsx",["113","114","115"],"import React from 'react';\n\nimport styles from './Navbar.module.css';\nimport logo from '../../assets/logo.jpeg';\n\n\nfunction Navbar(props) {\n\n\n\n  return (\n    <div className={styles.Navbar}>\n      <div className={styles.HomeContainer}>\n\n        <img src={logo} className={styles.Logo} onClick={() => {\n          if (props.isLoggedIn)\n            props.setCurrentPage('userfeed');\n          else\n            props.setCurrentPage('home');\n        }}></img>\n      </div>\n\n\n      {props.isLoggedIn &&\n        <div className={styles.UserData}>\n          <p className={styles.Data}>Username: {props.currentUser.username}</p>\n          <p className={styles.Data}>Your tendie funds: ${props.currentUser.total_money}</p>\n\n        </div>\n      }\n\n      {!props.isLoggedIn ?\n        <div className={styles.LoginRegisterContainer}>\n          <div className={styles.OptionContainer}>\n            {props.currentPage != 'login' &&\n              <div className={styles.Option} onClick={() => props.setCurrentPage('login')}>Log in</div>\n            }\n          </div>\n\n          <div className={styles.OptionContainer}>\n            {props.currentPage != 'register' && <div className={styles.Option} onClick={() => props.setCurrentPage('register')}>Register</div>\n            }\n          </div>\n        </div>\n        :\n        <div className={styles.LoginRegisterContainer}>\n\n          <div className={styles.Option}>Profile</div>\n          <div className={styles.Option} onClick={() => {\n            props.logOut();\n            props.setCurrentPage('home');\n          }}>Logout</div>\n        </div>\n      }\n\n    </div>\n  );\n}\n\nexport default Navbar;\n",["116","117"],"/home/osama/projects/wsb/frontend/src/components/sidefiller/SidefillerRight.jsx",[],"/home/osama/projects/wsb/frontend/src/components/sidefiller/SidefillerLeft.jsx",[],"/home/osama/projects/wsb/frontend/src/components/sellbutton/Sell.tsx",["118"],"import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport styles from './Sell.module.css';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nconst axios = require('axios');\n\nfunction Sell(props: any) {\n    const [amtToSell, setAmtToSell] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    /**\n     * Type of sale\n     */\n    const sellInvoked = () => {\n        props.isOption ? sellOption() : sellStock();\n    }\n\n    const sellOption = () => {\n\n        setIsLoading(true);\n        if (amtToSell <= props.amtOwned) {\n            axios.post(\"http://localhost:5000/transaction/sellContract\", {\n                userId: props.userId,\n                optionPurchaseId: props.purchaseId,\n                amtToSell: amtToSell,\n                optionSymbol: props.ticker\n\n            }).then((response: AxiosResponse) => {\n                console.log(response);\n\n                props.updateNavbar();\n                props.updateStockPositions();\n                setIsLoading(false);\n            }).catch((err: AxiosError) => {\n                console.log(err.response);\n                setIsLoading(false);\n\n            })\n        } else alert(\"No, you dont own that many\");\n    }\n\n\n    const sellStock = () => {\n        setIsLoading(true);\n        if (amtToSell <= props.amtOwned) {\n\n            axios.post(\"http://localhost:5000/transaction/sellStock\", {\n                userId: props.userId,\n                purchaseId: props.purchaseId,\n                amtToSell: amtToSell,\n                stockSymbol: props.ticker\n\n            }).then((response: AxiosResponse) => {\n\n                props.updateNavbar();\n                props.updateStockPositions();\n                setIsLoading(false);\n            }).catch((err: AxiosError) => {\n                console.log(err.response);\n                setIsLoading(false);\n\n            })\n        } else alert(\"No, you dont own that many\");\n    }\n\n    if (isLoading) return <div>Selling</div>;\n    return (\n        <div className={styles.SellContainer}>\n\n            {props.amtOwned != 0 &&\n                <div>\n\n                    <input onChange={(e) => setAmtToSell(+e.target.value)} type=\"number\" max={props.amtOwned}></input>\n                    {/* <button >Sell  </button> */}\n                    <Button\n                        onClick={() => sellInvoked()}\n                        variant=\"contained\"\n                        disabled={(amtToSell > props.amtOwned)}\n\n\n                    >Sell {amtToSell}\n\n                    </Button>\n                </div>\n            }\n\n\n\n        </div>\n    );\n}\n\nexport default Sell;\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":32,"column":15,"nodeType":"125","messageId":"126","endLine":32,"endColumn":17},{"ruleId":"123","severity":1,"message":"127","line":81,"column":37,"nodeType":"125","messageId":"126","endLine":81,"endColumn":39},{"ruleId":"123","severity":1,"message":"127","line":85,"column":28,"nodeType":"125","messageId":"126","endLine":85,"endColumn":30},{"ruleId":"128","severity":1,"message":"129","line":94,"column":6,"nodeType":"130","endLine":94,"endColumn":19,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"127","line":134,"column":22,"nodeType":"125","messageId":"126","endLine":134,"endColumn":24},{"ruleId":"123","severity":1,"message":"127","line":137,"column":22,"nodeType":"125","messageId":"126","endLine":137,"endColumn":24},{"ruleId":"123","severity":1,"message":"127","line":138,"column":22,"nodeType":"125","messageId":"126","endLine":138,"endColumn":24},{"ruleId":"123","severity":1,"message":"127","line":140,"column":22,"nodeType":"125","messageId":"126","endLine":140,"endColumn":24},{"ruleId":"123","severity":1,"message":"127","line":146,"column":22,"nodeType":"125","messageId":"126","endLine":146,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":10,"column":20,"nodeType":"125","messageId":"126","endLine":10,"endColumn":22},{"ruleId":"123","severity":1,"message":"127","line":16,"column":21,"nodeType":"125","messageId":"126","endLine":16,"endColumn":23},{"ruleId":"132","severity":1,"message":"133","line":24,"column":13,"nodeType":"134","endLine":24,"endColumn":53},{"ruleId":"132","severity":1,"message":"133","line":30,"column":13,"nodeType":"134","endLine":30,"endColumn":59},{"ruleId":"132","severity":1,"message":"133","line":36,"column":13,"nodeType":"134","endLine":36,"endColumn":60},{"ruleId":"135","severity":1,"message":"136","line":19,"column":12,"nodeType":"137","messageId":"138","endLine":19,"endColumn":20},{"ruleId":"135","severity":1,"message":"139","line":20,"column":12,"nodeType":"137","messageId":"138","endLine":20,"endColumn":22},{"ruleId":"135","severity":1,"message":"140","line":21,"column":12,"nodeType":"137","messageId":"138","endLine":21,"endColumn":18},{"ruleId":"128","severity":1,"message":"141","line":31,"column":8,"nodeType":"130","endLine":31,"endColumn":10,"suggestions":"142"},{"ruleId":"123","severity":1,"message":"127","line":43,"column":39,"nodeType":"125","messageId":"126","endLine":43,"endColumn":41},{"ruleId":"123","severity":1,"message":"127","line":43,"column":76,"nodeType":"125","messageId":"126","endLine":43,"endColumn":78},{"ruleId":"123","severity":1,"message":"127","line":19,"column":22,"nodeType":"125","messageId":"126","endLine":19,"endColumn":24},{"ruleId":"123","severity":1,"message":"127","line":19,"column":40,"nodeType":"125","messageId":"126","endLine":19,"endColumn":42},{"ruleId":"123","severity":1,"message":"127","line":20,"column":22,"nodeType":"125","messageId":"126","endLine":20,"endColumn":24},{"ruleId":"123","severity":1,"message":"127","line":20,"column":40,"nodeType":"125","messageId":"126","endLine":20,"endColumn":42},{"ruleId":"128","severity":1,"message":"143","line":78,"column":8,"nodeType":"130","endLine":78,"endColumn":10,"suggestions":"144"},{"ruleId":"123","severity":1,"message":"124","line":126,"column":26,"nodeType":"125","messageId":"126","endLine":126,"endColumn":28},{"ruleId":"128","severity":1,"message":"145","line":129,"column":8,"nodeType":"130","endLine":129,"endColumn":20,"suggestions":"146"},{"ruleId":"128","severity":1,"message":"147","line":146,"column":8,"nodeType":"130","endLine":146,"endColumn":22,"suggestions":"148"},{"ruleId":"123","severity":1,"message":"124","line":245,"column":31,"nodeType":"125","messageId":"126","endLine":245,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":312,"column":53,"nodeType":"125","messageId":"126","endLine":312,"endColumn":55},{"ruleId":"123","severity":1,"message":"124","line":312,"column":94,"nodeType":"125","messageId":"126","endLine":312,"endColumn":96},{"ruleId":"123","severity":1,"message":"124","line":319,"column":53,"nodeType":"125","messageId":"126","endLine":319,"endColumn":55},{"ruleId":"123","severity":1,"message":"124","line":319,"column":94,"nodeType":"125","messageId":"126","endLine":319,"endColumn":96},{"ruleId":"123","severity":1,"message":"124","line":346,"column":40,"nodeType":"125","messageId":"126","endLine":346,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":346,"column":73,"nodeType":"125","messageId":"126","endLine":346,"endColumn":75},{"ruleId":"123","severity":1,"message":"127","line":350,"column":48,"nodeType":"125","messageId":"126","endLine":350,"endColumn":50},{"ruleId":"123","severity":1,"message":"127","line":353,"column":53,"nodeType":"125","messageId":"126","endLine":353,"endColumn":55},{"ruleId":"123","severity":1,"message":"127","line":358,"column":46,"nodeType":"125","messageId":"126","endLine":358,"endColumn":48},{"ruleId":"123","severity":1,"message":"124","line":361,"column":37,"nodeType":"125","messageId":"126","endLine":361,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":361,"column":67,"nodeType":"125","messageId":"126","endLine":361,"endColumn":69},{"ruleId":"123","severity":1,"message":"124","line":366,"column":31,"nodeType":"125","messageId":"126","endLine":366,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":446,"column":39,"nodeType":"125","messageId":"126","endLine":446,"endColumn":41},{"ruleId":"123","severity":1,"message":"124","line":446,"column":78,"nodeType":"125","messageId":"126","endLine":446,"endColumn":80},{"ruleId":"123","severity":1,"message":"127","line":454,"column":90,"nodeType":"125","messageId":"126","endLine":454,"endColumn":92},{"ruleId":"123","severity":1,"message":"124","line":479,"column":33,"nodeType":"125","messageId":"126","endLine":479,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":479,"column":66,"nodeType":"125","messageId":"126","endLine":479,"endColumn":68},{"ruleId":"123","severity":1,"message":"127","line":484,"column":85,"nodeType":"125","messageId":"126","endLine":484,"endColumn":87},{"ruleId":"132","severity":1,"message":"133","line":15,"column":9,"nodeType":"134","endLine":20,"endColumn":12},{"ruleId":"123","severity":1,"message":"124","line":35,"column":32,"nodeType":"125","messageId":"126","endLine":35,"endColumn":34},{"ruleId":"123","severity":1,"message":"124","line":41,"column":32,"nodeType":"125","messageId":"126","endLine":41,"endColumn":34},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":71,"column":29,"nodeType":"125","messageId":"126","endLine":71,"endColumn":31},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.","ArrayExpression",["151"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'username' is assigned a value but never used.","Identifier","unusedVar","'totalMoney' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.user.total_money', 'props.user.user_id', and 'props.user.username'. Either include them or remove the dependency array. If 'setUsername' needs the current value of 'props.user.username', you can also switch to useReducer instead of useState and read 'props.user.username' in the reducer.",["152"],"React Hook useEffect has missing dependencies: 'getCurrentStockDetails', 'getStockOptionPositions', and 'getStockPositions'. Either include them or remove the dependency array.",["153"],"React Hook useEffect has missing dependencies: 'currentStock.symbol', 'expirationInView', and 'getOptions'. Either include them or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'props.stock'. Either include it or remove the dependency array.",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [currentPage, currentUser]",{"range":"166","text":"167"},"Update the dependencies array to be: [props.user.total_money, props.user.user_id, props.user.username]",{"range":"168","text":"169"},"Update the dependencies array to be: [getCurrentStockDetails, getStockOptionPositions, getStockPositions]",{"range":"170","text":"171"},"Update the dependencies array to be: [currentStock.symbol, expirationInView, getOptions, optionType]",{"range":"172","text":"173"},"Update the dependencies array to be: [currentStock, props.stock]",{"range":"174","text":"175"},[2076,2089],"[currentPage, currentUser]",[911,913],"[props.user.total_money, props.user.user_id, props.user.username]",[2432,2434],"[getCurrentStockDetails, getStockOptionPositions, getStockPositions]",[3971,3983],"[currentStock.symbol, expirationInView, getOptions, optionType]",[4349,4363],"[currentStock, props.stock]"]