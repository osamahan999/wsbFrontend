{"version":3,"sources":["assets/logo.jpeg","components/navbar/Navbar.jsx","components/sidefiller/SidefillerLeft.jsx","components/sidefiller/SidefillerRight.jsx","assets/grandtheftoptions.png","assets/deskImage.webp","assets/stonksgoup.jpeg","pages/Home/Home.tsx","pages/Login/Login.tsx","pages/Register/Register.tsx","components/sellbutton/Sell.tsx","pages/UserFeed/UserFeed.tsx","pages/Stock/Stock.tsx","pages/Profile/Profile.tsx","App.tsx","reportWebVitals.ts","index.tsx","pages/Stock/Stock.module.css","components/navbar/Navbar.module.css","pages/Home/Home.module.css","pages/Register/Register.module.css","pages/Login/Login.module.css","pages/UserFeed/UserFeed.module.css","pages/Profile/Profile.module.css","components/sidefiller/Sidefiller.module.css","App.module.css","helper.tsx","components/sellbutton/Sell.module.css"],"names":["Navbar","props","className","styles","HomeContainer","src","logo","Logo","onClick","isLoggedIn","setCurrentPage","UserData","Data","currentUser","username","total_money","LoginRegisterContainer","Option","logOut","OptionContainer","currentPage","Sidefiller","SidefillerLeft","SidefillerRight","Home","Content","CarouselDiv","Image","GTO","deskImage","stonksgoup","axios","require","Login","useState","setUsername","password","setPassword","message","setMessage","isLoading","setIsLoading","ContentContainer","ResponseDiv","LoginInputsContainer","InputBox","onChange","e","target","value","post","then","response","now","Date","setTime","getTime","cookie","data","token","toUTCString","document","setUser","catch","err","LoginButton","Register","email","setEmail","RegisterInputsContainer","type","RegisterButton","Sell","amtToSell","setAmtToSell","sellOption","amtOwned","userId","optionPurchaseId","purchaseId","optionSymbol","ticker","console","log","updateNavbar","updateStockPositions","alert","sellStock","stockSymbol","SellContainer","max","Button","isOption","variant","disabled","UserFeed","setTotalMoney","setUserId","searchInput","setSearchInput","stocksInDropdown","setStocksInDropdown","ownedStocks","setOwnedStocks","ownedContracts","setOwnedContracts","useEffect","user","user_id","getUserStocks","getUserContracts","get","params","positions","length","undefined","SearchbarContainer","Autocomplete","id","autoComplete","clearOnBlur","options","filterOptions","state","freeSolo","getOptionLabel","option","symbol","style","width","renderInput","TextField","label","event","setCurrentStock","map","stock","PositionData","amt_of_purchase","amt_sold","stock_symbol","price_at_purchase","GoToButton","purchase_id","contract","description","underlying","option_purchase_id","amt_of_contracts","ask","option_symbol","cookieToken","Stock","currentStock","userPw","setUserPw","amtStocksToPurchase","setAmtStocksToPurchase","stockPurchaseModalOpen","setStockPurchaseModalOpen","amtOfContractsToPurchase","setAmtOfContractsToPurchase","optionPurchaseModalOpen","setOptionPurchaseModalOpen","optionInView","setOptionInView","optionExpirations","setOptionExpirations","pulledOptions","setPulledOptions","expirationInView","setExpirationInView","optionType","setOptionType","loadingOptions","setLoadingOptions","loadingPurchases","setLoadingPurchases","setPositions","optionPositions","setOptionPositions","getCurrentStockDetails","interval","setInterval","getStockPositions","getStockOptionPositions","clearInterval","error","getOptions","date","container","StockData","open","last","volume","Modal","ModalContainer","onClose","min","Math","round","getToken","stockName","stockPrice","amtOfStocks","exchange","exch","Error","OptionsContainer","PulledOptions","DescriptionContainer","OptionType","OptionDetailsContainer","optionPrice","amtOfContracts","contract_size","low","high","GreeksContainer","Object","keys","greeks","key","StockPositions","position","expiration_date","date_purchased","toDateString","Profile","renderedStockHistory","setRenderedStockHistory","stocksOrContracts","setStocksOrContracts","salesOrPurchases","setSalesOrPurchases","filterBySymbol","setFilterBySymbol","stockSalesNet","setStockSalesNet","optionSalesNet","setOptionsSalesNet","loading","setLoading","getHistory","filter","sum","i","price_at_sale","UserContent","placeholder","StockHistory","date_sold","App","setCurrentUser","setIsLoggedIn","currentStockInFocus","setCurrentStockInFocus","logIn","JSON","stringify","LoadingDiv","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports","cookies","split","ret","forEach","keyPair","subArray","trim"],"mappings":"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","file":"static/js/main.4f4d9b19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9c5af943.jpeg\";","import React from 'react';\n\nimport styles from './Navbar.module.css';\nimport logo from '../../assets/logo.jpeg';\n\n\nfunction Navbar(props) {\n\n\n\n  return (\n    <div className={styles.Navbar}>\n      <div className={styles.HomeContainer}>\n\n        <img src={logo} className={styles.Logo} onClick={() => {\n          if (props.isLoggedIn)\n            props.setCurrentPage('userfeed');\n          else\n            props.setCurrentPage('home');\n        }}></img>\n      </div>\n\n\n      {props.isLoggedIn &&\n        <div className={styles.UserData}>\n          <p className={styles.Data}>Username: {props.currentUser.username}</p>\n          <p className={styles.Data}>Your tendie funds: ${props.currentUser.total_money}</p>\n\n        </div>\n      }\n\n      {!props.isLoggedIn ?\n        <div className={styles.LoginRegisterContainer}>\n          <div className={styles.OptionContainer}>\n            {props.currentPage != 'login' &&\n              <div className={styles.Option} onClick={() => props.setCurrentPage('login')}>Log in</div>\n            }\n          </div>\n\n          <div className={styles.OptionContainer}>\n            {props.currentPage != 'register' && <div className={styles.Option} onClick={() => props.setCurrentPage('register')}>Register</div>\n            }\n          </div>\n        </div>\n        :\n        <div className={styles.LoginRegisterContainer}>\n\n          <div className={styles.Option} onClick={() =>\n            props.setCurrentPage('profile')}\n          > Profile</div>\n\n\n          <div className={styles.Option} onClick={() => {\n            props.logOut();\n            props.setCurrentPage('home');\n          }}>Logout</div>\n        </div>\n      }\n\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nimport styles from './Sidefiller.module.css';\n\n\nfunction Sidefiller(props) {\n    return (\n        <div className={styles.SidefillerLeft}>\n        </div>\n    );\n}\n\nexport default Sidefiller;\n","import React from 'react';\n\nimport styles from './Sidefiller.module.css';\n\n\nfunction Sidefiller(props) {\n    return (\n        <div className={styles.SidefillerRight}>\n\n        </div>\n    );\n}\n\nexport default Sidefiller;\n","export default __webpack_public_path__ + \"static/media/grandtheftoptions.578024e5.png\";","export default __webpack_public_path__ + \"static/media/deskImage.ca6b6f13.webp\";","export default __webpack_public_path__ + \"static/media/stonksgoup.f60d9269.jpeg\";","import React from 'react';\nimport SidefillerLeft from '../../components/sidefiller/SidefillerLeft';\nimport SidefillerRight from '../../components/sidefiller/SidefillerRight';\nimport Carousel from 'react-elastic-carousel';\n\nimport styles from './Home.module.css';\n\nimport GTO from '../../assets/grandtheftoptions.png';\nimport deskImage from '../../assets/deskImage.webp';\nimport stonksgoup from '../../assets/stonksgoup.jpeg';\n\nfunction Home() {\n  return (\n    <div className={styles.Home}>\n\n\n      <SidefillerLeft />\n\n      <div className={styles.Content}>\n\n        <Carousel>\n          <div className={styles.CarouselDiv}>\n            <div>Welcome to <b>Wallstreet Bets Tycoon</b></div>\n            <img className={styles.Image} src={GTO}></img>\n\n          </div>\n\n          <div className={styles.CarouselDiv}>\n            <div>Why use Robinhood which crashes all the time when you can use this site?</div>\n            <img className={styles.Image} src={deskImage}></img>\n\n          </div>\n\n          <div className={styles.CarouselDiv}>\n            <div>This could be you!</div>\n            <img className={styles.Image} src={stonksgoup}></img>\n\n          </div>\n\n\n\n        </Carousel>\n\n\n\n\n\n\n      </div>\n\n      <SidefillerRight />\n\n    </div>\n  );\n}\n\nexport default Home;\n","import { AxiosError, AxiosResponse } from 'axios';\nimport React, { useState } from 'react';\n\nimport SidefillerLeft from '../../components/sidefiller/SidefillerLeft';\nimport SidefillerRight from '../../components/sidefiller/SidefillerRight';\n\nimport styles from './Login.module.css';\n\nconst axios = require(\"axios\");\n\nfunction Login(props: any) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState('');\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const handleSubmit = () => {\n        if (username == '' || password == '') setMessage(\"Cannot have empty input\");\n        else {\n\n            //tell client loading \n            setIsLoading(true);\n\n\n            axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/user/loginWithoutToken\", {\n                username: username,\n                password: password\n\n            }).then((response: AxiosResponse) => {\n                setMessage(\"Success\");\n\n\n                let now = new Date();\n                now.setTime(now.getTime() + (1000 * 3600000)); //lasts 3.6 million seconds\n\n                let cookie = \"token = \" + response.data.token + \"; SameSite=None; Secure; expires=\" + now.toUTCString();\n                document.cookie = cookie;\n                props.setUser(response.data);\n\n                setIsLoading(false);\n\n                //add token and shit to localstorage\n            }).catch((err: AxiosError) => {\n                if (err.response != null) setMessage(err.response.data);\n                setIsLoading(false);\n\n\n            })\n        }\n\n\n\n    }\n\n\n    /**\n     * If isLoading ->\n     *  return (<div> big ass cock</div>)\n     */\n\n    //uhh do i put it here?\n\n    if (isLoading) {\n        return (<div>Logging you In</div>);\n    }\n\n\n\n    return (\n\n        <div className={styles.Login}>\n\n            <SidefillerLeft />\n            <div className={styles.ContentContainer}>\n                <div>\n\n                    <div className={styles.ResponseDiv}>{message}</div>\n                    {/* Username, password */}\n                    <div className={styles.LoginInputsContainer}>\n                        <div className={styles.InputBox}>\n                            <p>Username:</p>\n                            <input onChange={(e) => setUsername(e.target.value)}></input>\n                        </div>\n                        <div className={styles.InputBox}>\n                            <p>Password:</p>\n                            <input onChange={(e) => setPassword(e.target.value)}></input>\n                        </div>\n\n                        <button onClick={() => handleSubmit()} className={styles.LoginButton}>$$$$$</button>\n\n\n\n                    </div>\n\n                </div>\n\n            </div>\n            <SidefillerRight />\n\n\n        </div>\n    );\n}\n\nexport default Login;\n","import { AxiosError, AxiosResponse } from 'axios';\nimport React, { useState } from 'react';\n\nimport SidefillerLeft from '../../components/sidefiller/SidefillerLeft';\nimport SidefillerRight from '../../components/sidefiller/SidefillerRight';\n\n\nimport styles from './Register.module.css';\n\nconst axios = require(\"axios\");\n\nfunction Register(props: any) {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = () => {\n        if (username == '' || password == '') setMessage(\"Cannot have empty input\");\n        else {\n            axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/user/userRegister\", {\n                email: email,\n                username: username,\n                password: password\n\n            }).then((response: AxiosResponse) => {\n                setMessage(response.data);\n            }).catch((err: AxiosError) => {\n                if (err.response != null) setMessage(err.response.data);\n            })\n        }\n\n\n\n    }\n\n    return (\n\n        <div className={styles.Register}>\n\n            <SidefillerLeft />\n            <div className={styles.ContentContainer}>\n                <div>\n\n                    <div className={styles.ResponseDiv}>{message}</div>\n\n                    <div className={styles.RegisterInputsContainer}>\n                        <div className={styles.InputBox}>\n                            <p>Email:</p>\n                            <input type=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                        </div>\n                        <div className={styles.InputBox}>\n                            <p>Username:</p>\n                            <input onChange={(e) => setUsername(e.target.value)}></input>\n                        </div>\n                        <div className={styles.InputBox}>\n                            <p>Password:</p>\n                            <input onChange={(e) => setPassword(e.target.value)}></input>\n                        </div>\n\n                        <button onClick={() => handleSubmit()} className={styles.RegisterButton}>Start losing money now!</button>\n\n\n\n                    </div>\n\n                </div>\n\n            </div>\n            <SidefillerRight />\n\n\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport styles from './Sell.module.css';\nimport { AxiosError, AxiosResponse } from 'axios';\n\nconst axios = require('axios');\n\nfunction Sell(props: any) {\n    const [amtToSell, setAmtToSell] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    /**\n     * Type of sale\n     */\n    const sellInvoked = () => {\n        props.isOption ? sellOption() : sellStock();\n    }\n\n    const sellOption = () => {\n\n        setIsLoading(true);\n        if (amtToSell <= props.amtOwned) {\n            axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/sellContract\", {\n                userId: props.userId,\n                optionPurchaseId: props.purchaseId,\n                amtToSell: amtToSell,\n                optionSymbol: props.ticker\n\n            }).then((response: AxiosResponse) => {\n                console.log(response);\n\n                props.updateNavbar();\n                props.updateStockPositions();\n                setIsLoading(false);\n            }).catch((err: AxiosError) => {\n                console.log(err.response);\n                setIsLoading(false);\n\n            })\n        } else alert(\"No, you dont own that many\");\n    }\n\n\n    const sellStock = () => {\n        setIsLoading(true);\n        if (amtToSell <= props.amtOwned) {\n\n            axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/sellStock\", {\n                userId: props.userId,\n                purchaseId: props.purchaseId,\n                amtToSell: amtToSell,\n                stockSymbol: props.ticker\n\n            }).then((response: AxiosResponse) => {\n\n                props.updateNavbar();\n                props.updateStockPositions();\n                setIsLoading(false);\n            }).catch((err: AxiosError) => {\n                setIsLoading(false);\n\n            })\n        } else alert(\"No, you dont own that many\");\n    }\n\n    if (isLoading) return <div>Selling</div>;\n    return (\n        <div className={styles.SellContainer}>\n\n            {props.amtOwned != 0 &&\n                <div>\n\n                    <input onChange={(e) => setAmtToSell(+e.target.value)} type=\"number\" max={props.amtOwned}></input>\n                    {/* <button >Sell  </button> */}\n                    <Button\n                        onClick={() => sellInvoked()}\n                        variant=\"contained\"\n                        disabled={(amtToSell > props.amtOwned)}\n\n\n                    >Sell {amtToSell}\n\n                    </Button>\n                </div>\n            }\n\n\n\n        </div>\n    );\n}\n\nexport default Sell;\n","import { AxiosError, AxiosResponse } from 'axios';\nimport React, { useEffect, useState } from 'react';\n\n\nimport SidefillerLeft from '../../components/sidefiller/SidefillerLeft';\nimport SidefillerRight from '../../components/sidefiller/SidefillerRight';\n\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport styles from './UserFeed.module.css';\nimport { TextField } from '@material-ui/core';\nimport Sell from '../../components/sellbutton/Sell';\n\nconst axios = require('axios');\n\n\nfunction UserFeed(props: any) {\n\n    const [username, setUsername] = useState('');\n    const [totalMoney, setTotalMoney] = useState(0);\n    const [userId, setUserId] = useState(-1);\n\n    const [searchInput, setSearchInput] = useState('');\n    const [stocksInDropdown, setStocksInDropdown] = useState<any[]>([]);\n\n    const [ownedStocks, setOwnedStocks] = useState<Array<JSON>>([]);\n    const [ownedContracts, setOwnedContracts] = useState<Array<JSON>>([]);\n\n    useEffect(() => {\n        setUsername(props.user.username);\n        setTotalMoney(props.user.total_money);\n        setUserId(props.user.user_id);\n\n    }, [])\n\n    useEffect(() => {\n        getUserStocks();\n        getUserContracts();\n\n    }, [userId]);\n\n\n    const getUserStocks = () => {\n        if (userId != -1) {\n            axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/getSpecificPosition\", {\n                params: {\n                    'userId': userId\n                }\n            }).then((response: AxiosResponse) => {\n                setOwnedStocks(response.data.positions);\n            }).catch((err: AxiosError) => {\n                console.log(err);\n            })\n        }\n    }\n\n    const getUserContracts = () => {\n        if (userId != -1) {\n            axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/getSpecificOptionPosition\", {\n                params: {\n                    'userId': userId\n                }\n            }).then((response: AxiosResponse) => {\n                setOwnedContracts(response.data.positions);\n            }).catch((err: AxiosError) => {\n                console.log(err.response);\n            })\n        }\n    }\n\n    const setExpired = (underlying: string, optionPurchaseId: number) => {\n        if (userId != -1) {\n            axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/setOptionToExpired\", {\n                \"userId\": userId,\n                \"optionSymbol\": underlying,\n                \"optionPurchaseId\": optionPurchaseId\n            }).then((response: AxiosResponse) => {\n                getUserContracts();\n                console.log(response.data);\n            }).catch((err: AxiosError) => {\n                console.log(err.response);\n            })\n        }\n    }\n\n    useEffect(() => {\n\n        if (searchInput.length > 0) {\n\n            axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/stockData/searchBySymbol\", {\n                params: {\n                    'input': searchInput\n                }\n            }).then((response: AxiosResponse) => {\n                (response.data.length == undefined || response.data.length == 0) ? setStocksInDropdown([]) : setStocksInDropdown(response.data);\n            }).catch((err: AxiosError) => {\n                setStocksInDropdown([]);\n\n            })\n        } else {\n            setStocksInDropdown([]);\n        }\n\n    }, [searchInput])\n\n\n\n\n    return (\n\n        <div className={styles.UserFeed}>\n\n            <SidefillerLeft />\n\n\n            <div className={styles.ContentContainer}>\n                {/* search bar */}\n                <div className={styles.SearchbarContainer}>\n\n\n                    <Autocomplete\n                        id=\"combo-box-demo\"\n                        autoComplete={true}\n                        clearOnBlur={false}\n                        options={stocksInDropdown}\n                        filterOptions={(options, state) => options}\n                        freeSolo={true}\n                        getOptionLabel={(option) => option.symbol}\n                        style={{ width: 300 }}\n                        renderInput={(params) =>\n                            <TextField {...params}\n                                label=\"Search by Ticker\"\n                                onChange={(e) => { setSearchInput(e.target.value); }}\n                                variant=\"outlined\"\n                            />\n                        }\n\n                        onChange={(event, value) => {\n                            props.setCurrentStock(value.symbol);\n                        }}\n\n\n                    />\n\n\n                    <button onClick={() => {\n\n\n                        props.setCurrentPage('stock');\n\n                    }}>find yolo</button>\n\n\n                </div>\n\n\n                <div>\n                    <h3>Owned shares:</h3>\n                    {ownedStocks.map((stock: JSON | any) => {\n                        return (\n                            <div className={styles.PositionData}>\n                                You have {(stock.amt_of_purchase - stock.amt_sold) + \" share of \" + stock.stock_symbol + \" stock, purchased at $\" + stock.price_at_purchase}\n                                <button className={styles.GoToButton} onClick={() => {\n                                    props.setCurrentStock(stock.stock_symbol);\n                                    props.setCurrentPage('stock');\n                                }}>Go to {stock.stock_symbol} </button>\n                                <Sell\n                                    userId={userId}\n                                    purchaseId={stock.purchase_id}\n                                    ticker={stock.stock_symbol}\n\n                                    amtOwned={stock.amt_of_purchase - stock.amt_sold}\n                                    isOption={false}\n                                    updateStockPositions={() => getUserStocks()}\n                                    updateNavbar={() => props.updateNavbar()}\n                                />\n                            </div>);\n                    })}\n\n                    <h3>Owned contracts</h3>\n                    {ownedContracts != null && ownedContracts.map((contract: JSON | any) => {\n                        if (contract != null) return (\n                            <div className={styles.PositionData}>\n                                <h4>{contract.description}</h4>\n                                <button className={styles.GoToButton} onClick={() => setExpired(contract.underlying, contract.option_purchase_id)}>Ashamed? Mark as seen</button>\n                                <h4>Option ticker: {contract.underlying}</h4>\n\n                                { (contract.amt_of_contracts - contract.amt_sold)\n                                    + \" contracts worth $\" + contract.ask + \" purchased for $\" + contract.price_at_purchase}\n                                <div>You {contract.ask - contract.price_at_purchase >= 0 ? \"profited \" : \"lost \"}\n                                ${contract.ask * contract.amt_of_contracts - contract.price_at_purchase * contract.amt_of_contracts} </div>\n                                {contract.description != \"expired\" && <Sell\n                                    userId={userId}\n                                    purchaseId={contract.option_purchase_id}\n                                    ticker={contract.option_symbol}\n\n                                    amtOwned={(contract.amt_of_contracts - contract.amt_sold)}\n                                    isOption={true}\n                                    updateStockPositions={() => getUserContracts()}\n                                    updateNavbar={() => props.updateNavbar()}\n                                />}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n            <SidefillerRight />\n\n\n        </div>\n    );\n}\n\nexport default UserFeed;\n","import Modal from \"@material-ui/core/Modal\";\nimport { AxiosError, AxiosResponse } from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Sell from \"../../components/sellbutton/Sell\";\n\n\n\n\n\nimport styles from './Stock.module.css';\n\nconst axios = require('axios');\nconst cookieToken = require('../../helper');\n\n\nfunction Stock(props: any) {\n\n    const [currentStock, setCurrentStock] = useState<JSON | any>();\n\n    const [userPw, setUserPw] = useState<string>('');\n\n    //states for purchasing stocks\n    const [amtStocksToPurchase, setAmtStocksToPurchase] = useState<number>(0);\n    const [stockPurchaseModalOpen, setStockPurchaseModalOpen] = useState<boolean>(false);\n    const [message, setMessage] = useState<string>('');\n\n    //States for purchasing options \n    const [amtOfContractsToPurchase, setAmtOfContractsToPurchase] = useState<number>(0);\n    const [optionPurchaseModalOpen, setOptionPurchaseModalOpen] = useState<boolean>(false);\n\n    //Option data\n    const [optionInView, setOptionInView] = useState<JSON | any>();\n    const [optionExpirations, setOptionExpirations] = useState<Array<string>>([]);\n    const [pulledOptions, setPulledOptions] = useState<Array<JSON>>([]);\n    const [expirationInView, setExpirationInView] = useState<string>();\n\n    const [optionType, setOptionType] = useState<string>('call');\n\n    const [loadingOptions, setLoadingOptions] = useState<boolean>(false);\n    const [loadingPurchases, setLoadingPurchases] = useState<boolean>(false);\n\n\n    const [positions, setPositions] = useState<Array<JSON>>([]);\n    const [optionPositions, setOptionPositions] = useState<Array<JSON>>([]);\n\n    /**\n     * Initial runs for data\n     */\n    useEffect(() => {\n\n        //Get initial stock data\n        getCurrentStockDetails();\n\n        /**\n         * gets the stock data every 10 seconds to update the client side data\n         * \n         * TODO: \n         * \n         * Perhaps implement these websockets\n         * https://documentation.tradier.com/brokerage-api/streaming/wss-market-websocket\n         * https://documentation.tradier.com/brokerage-api/streaming/create-market-session\n         * \n         * This may give much more flexibility\n         */\n\n        const interval = setInterval(() => {\n            getCurrentStockDetails();\n\n        }, 10000)\n\n\n\n        getStockPositions();\n        getStockOptionPositions();\n\n        return () => clearInterval(interval);\n\n    }, [])\n\n    //Gets stock details\n    const getCurrentStockDetails = () => {\n        axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/stockData/getStockQuote\", {\n            params: {\n                'symbol': props.stock\n            }\n        }).then((response: AxiosResponse) => {\n            setCurrentStock(response.data);\n        }).catch((err: AxiosError) => {\n            alert(err.response);\n\n        })\n    }\n\n    const getStockPositions = () => {\n        //Gets your positions on this stock\n        axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/getSpecificPosition\", {\n            params: {\n                \"userId\": props.currentUser.user_id,\n                \"stockSymbol\": props.stock\n            }\n        }).then((response: AxiosResponse) => {\n\n            setPositions(response.data.positions)\n        }).catch((error: AxiosError) => {\n            console.log(error.response);\n        })\n    }\n\n    const getStockOptionPositions = () => {\n        //Gets your option positions on this stock\n        axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/getSpecificOptionPosition\", {\n            params: {\n                \"userId\": props.currentUser.user_id,\n                \"stockSymbol\": props.stock\n            }\n        }).then((response: AxiosResponse) => {\n\n            setOptionPositions(response.data.positions)\n        }).catch((error: AxiosError) => {\n            console.log(error.response);\n        })\n    }\n\n\n    useEffect(() => {\n        expirationInView != undefined &&\n            getOptions(currentStock.symbol, expirationInView);\n\n    }, [optionType])\n\n\n    useEffect(() => {\n\n\n        axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/stockData/getExpirations\", {\n            params: {\n                'symbol': props.stock\n            }\n        }).then((response: AxiosResponse) => {\n            setOptionExpirations(response.data);\n\n        }).catch((err: AxiosError) => {\n            setOptionExpirations([]);\n\n        })\n    }, [currentStock])\n\n    /**\n     * Purchases the amt of stocks specified for the logged in user\n     */\n    const purchaseStock = () => {\n        if (amtStocksToPurchase > 0) {\n            axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/purchaseStock\", {\n                token: cookieToken.getToken(),\n                password: userPw,\n                stockSymbol: currentStock.symbol,\n                stockName: currentStock.description,\n                stockPrice: currentStock.ask,\n                amtOfStocks: amtStocksToPurchase,\n                exchange: currentStock.exch\n            }).then((response: AxiosResponse) => {\n\n                setMessage(response.data);\n\n                getStockPositions();\n                props.updateNavbar();\n                setLoadingPurchases(false);\n\n\n            }).catch((err: AxiosError) => {\n                setMessage(\"Error purchasing\");\n                setLoadingPurchases(false);\n\n            })\n        } else {\n            setMessage(\"Must be amt > 0\");\n            setLoadingPurchases(false);\n        }\n    }\n\n\n    /**\n    * Purchases the amt of options specified for the logged in user\n    */\n    const purchaseOption = () => {\n        if (amtOfContractsToPurchase > 0) {\n            axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/purchaseOption\", {\n                token: cookieToken.getToken(),\n                password: userPw,\n                optionSymbol: optionInView.symbol,\n                optionPrice: (optionInView.ask * 100), //100x shares\n                amtOfContracts: amtOfContractsToPurchase\n            }).then((response: AxiosResponse) => {\n\n                setMessage(response.data);\n\n                getStockOptionPositions();\n                props.updateNavbar();\n                setLoadingPurchases(false);\n\n            }).catch((err: AxiosError) => {\n                setMessage(\"Error purchasing\");\n                setLoadingPurchases(false);\n\n            })\n        } else {\n            setMessage(\"Must be amt > 0\");\n            setLoadingPurchases(false);\n        }\n    }\n\n\n    /**\n     * Gets the options at a specified date for the stock\n     * @param symbol \n     * @param date \n     */\n    const getOptions = (symbol: string, date: string) => {\n        setLoadingOptions(true);\n\n        axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/stockData/getOptionsOnDate\", {\n            params: {\n                'symbol': symbol,\n                'expiration': date,\n                'optionType': optionType\n            }\n        }).then((response: AxiosResponse) => {\n            setPulledOptions(response.data);\n            setLoadingOptions(false);\n        }).catch((err: AxiosError) => {\n            setPulledOptions([]);\n            setLoadingOptions(false);\n\n\n        })\n    }\n\n\n    return (\n\n        <div className={styles.Stock}>\n\n\n            <div className={styles.ContentContainer}>\n                {currentStock != undefined &&\n                    <div className={styles.container}>\n                        <div className={styles.StockData}>\n                            <h2>{currentStock.description}</h2>\n                            <h2>open: ${currentStock.open}</h2>\n                            <h2>close: ${currentStock.last}</h2>\n                            <h2>volume: {currentStock.volume}</h2>\n                            <h2>Current Cost: ${currentStock.ask}</h2>\n\n                            <div>\n\n\n                                <button onClick={() => setStockPurchaseModalOpen(true)}>Purchase {props.stock}</button></div>\n                            <div>\n\n                            </div>\n                            <Modal\n                                className={styles.ModalContainer}\n                                open={stockPurchaseModalOpen}\n                                onClose={() => {\n                                    setStockPurchaseModalOpen(false);\n                                    setAmtStocksToPurchase(0);\n                                    setMessage(\"\");\n                                    setUserPw(\"\");\n\n\n                                }}\n                            >\n                                {\n                                    loadingPurchases ?\n                                        <div>Purchasing</div>\n                                        :\n\n                                        <div className={styles.Modal}>\n                                            <div>Amt:</div>\n                                            <input type=\"number\" max=\"1000\" min=\"1\" onChange={(e) => setAmtStocksToPurchase(+(e.target.value))}></input>\n                                            <div>\n                                                <div>Your tendies after purchasing {amtStocksToPurchase} {props.stock} stocks:\n\n                                        ${(Math.round(1000 * (+(props.currentUser.total_money) - ((+amtStocksToPurchase) * (+currentStock.ask)))) / 1000)}</div>\n                                            </div>\n                                            <div>\n                                                <p>Your password:</p>\n                                                <input onChange={(e) => setUserPw(e.target.value)}></input>\n                                                <button onClick={() => {\n                                                    if (+(props.currentUser.total_money) < ((+amtStocksToPurchase) * (+currentStock.ask))) setMessage('Not enough funds!')\n                                                    else {\n                                                        setLoadingPurchases(true);\n                                                        purchaseStock();\n                                                    }\n                                                }}>Purchase {amtStocksToPurchase + \" of \" + props.stock}</button>\n                                            </div>\n\n\n                                            <h2 className={styles.Error}>{message}</h2>\n\n                                        </div>\n                                }\n                            </Modal>\n                            <br></br>\n                        </div>\n\n                        <h1>Options</h1>\n\n                        <div className={styles.OptionsContainer}>\n\n                            <select >\n                                {(optionExpirations != undefined && optionExpirations.length != 0) ?\n                                    <option onClick={() => {\n                                        setPulledOptions([]);\n                                        setExpirationInView(\"\");\n                                        setOptionInView(undefined);\n                                    }}>Select an option</option> : <option>No options For {props.stock}</option>}\n\n                                {(optionExpirations != undefined && optionExpirations.length != 0) &&\n                                    optionExpirations.map((date) => {\n                                        return (\n                                            <option className={styles.Option}\n                                                onClick={() => {\n                                                    getOptions(props.stock, date);\n                                                    setOptionInView(undefined);\n                                                    setExpirationInView(date);\n                                                }}>\n                                                {date}</option>\n                                        );\n                                    })}\n                            </select>\n\n\n                        </div>\n\n                    </div>\n                }\n\n            </div>\n\n\n            {loadingOptions ? <div className={styles.PulledOptions}>loading</div> : <div className={styles.PulledOptions}>\n                <div className={styles.DescriptionContainer}>\n\n                    <h2>{expirationInView}</h2>\n                    {(expirationInView != undefined && expirationInView != \"\") &&\n                        <button className={styles.OptionType}\n                            onClick={() => {\n                                setOptionInView(undefined);\n                                if (optionType == 'call') {\n                                    setOptionType('put');\n                                }\n                                else if (optionType == 'put') {\n                                    setOptionType('call');\n                                }\n\n                            }}>\n                            Show {optionType == 'call' ? \"put\" : \"call\"}\n                        </button>}\n\n                    {(pulledOptions != undefined || pulledOptions != []) && pulledOptions.map((option: any) => {\n                        return (<p onClick={() => setOptionInView(option)} className={styles.Option}>{option.description + \" at $\" + option.ask}</p>)\n                    })}\n\n                </div>\n                {optionInView != undefined &&\n                    <div className={styles.OptionDetailsContainer}>\n                        <h2>Option Details</h2>\n\n                        <button onClick={() => setOptionPurchaseModalOpen(true)}>Purchase contract</button>\n                        <Modal\n                            className={styles.ModalContainer}\n                            open={optionPurchaseModalOpen}\n                            onClose={() => {\n                                setOptionPurchaseModalOpen(false);\n                                setAmtOfContractsToPurchase(0);\n                                setMessage(\"\");\n                                setUserPw(\"\");\n\n\n                            }}\n                        >\n                            {\n                                loadingPurchases ? <div>Purchasing</div>\n                                    :\n                                    <div className={styles.Modal}>\n                                        <div><b>Amt:</b></div>\n                                        <div><input type=\"number\" max=\"1000\" min=\"1\" onChange={(e) => setAmtOfContractsToPurchase(+(e.target.value))}></input>\n                                    Total: ${100 * amtOfContractsToPurchase * optionInView.ask}</div>\n                                        <div>\n                                            <div>Your tendies after purchasing {amtOfContractsToPurchase} {optionInView.description} contracts:\n\n                                        ${(Math.round(1000 * (+(props.currentUser.total_money) - ((+amtOfContractsToPurchase) * (100 * +optionInView.ask)))) / 1000)}</div>\n                                        </div>\n                                        <div>\n                                            <p><b>Your password:</b></p>\n                                            <input onChange={(e) => setUserPw(e.target.value)}></input>\n                                            <button onClick={() => {\n                                                if (+(props.currentUser.total_money) < ((+amtOfContractsToPurchase) * (+optionInView.ask))) setMessage('Not enough funds!')\n                                                else {\n                                                    setLoadingPurchases(true);\n                                                    purchaseOption();\n                                                }\n                                            }}>Purchase {amtOfContractsToPurchase + \" of this contract\"}</button>\n                                        </div>\n\n\n                                        <h2 className={styles.Error}>{message}</h2>\n\n                                    </div>\n                            }\n                        </Modal>\n\n\n                        <p>{optionInView.description}</p>\n                        <p><b>Cost of Contract (100x shares): </b>${optionInView.ask}</p>\n\n                        <p>Volume: {optionInView.volume}</p>\n\n                        <p>Contract Size: {optionInView.contract_size}</p>\n                        <p>Low : ${optionInView.low} -- $High: {optionInView.high} </p>\n\n                        <div>\n                            <h2>Greeks</h2>\n                            {true &&\n                                <div className={styles.GreeksContainer}>\n                                    {Object.keys(optionInView.greeks).map((key) => {\n                                        return (<p>{key + \": \" + optionInView.greeks[key]}</p>)\n                                    })}\n                                </div>\n\n                            }\n\n                        </div>\n\n                    </div>\n\n                }\n            </div>}\n\n\n            <div className={styles.ContentContainer}>\n                <div className={styles.StockPositions}>\n                    <h2>Your {props.stock} contracts</h2>\n\n                    {(optionPositions != undefined && optionPositions.length != 0) &&\n                        optionPositions.map((position: JSON | any) => {\n\n                            if (position != null) {\n                                return (\n                                    <div>\n                                        <h3>{position.description}</h3>\n                                        <div>You have {(position.amt_of_contracts - position.amt_sold) + \" \"}\n                                            {(position.amt_of_contracts - position.amt_sold) == 1 ? \"contract \" : \"contracts \"}\n                                            remaining which you purchased for ${position.price_at_purchase + \" each \"}\n                                        </div>\n                                        <div>Currently worth ${position.ask * 100}  expiring on {position.expiration_date}</div>\n\n                                        <Sell\n                                            userId={props.currentUser.user_id}\n                                            purchaseId={position.option_purchase_id}\n                                            ticker={position.symbol}\n\n                                            amtOwned={position.amt_of_contracts - position.amt_sold}\n                                            isOption={true}\n                                            updateNavbar={() => props.updateNavbar()}\n                                            updateStockPositions={() => getStockOptionPositions()}\n                                        />\n                                    </div>\n                                );\n                            }\n\n                        })}\n\n                </div>\n\n\n                <div className={styles.StockPositions}>\n                    <h2>Your {props.stock} stocks</h2>\n\n                    {(positions != undefined && positions.length != 0) &&\n                        positions.map((position: JSON | any) => {\n                            if (position != null) {\n                                return (\n                                    <div> You have {position.amt_of_purchase - position.amt_sold + \" \"}\n                                        {(position.amt_of_purchase - position.amt_sold) == 1 ? \"share \" : \"shares\"} in\n                                        {\" \" + props.stock} which you purchased at ${position.price_at_purchase + \" \"}\n                                     on {(new Date(position.date_purchased)).toDateString()}\n\n                                        <Sell\n                                            userId={props.currentUser.user_id}\n                                            purchaseId={position.purchase_id}\n                                            ticker={props.stock}\n\n                                            amtOwned={position.amt_of_purchase - position.amt_sold}\n                                            isOption={false}\n                                            updateNavbar={() => props.updateNavbar()}\n                                            updateStockPositions={() => getStockPositions()}\n                                        />\n                                    </div>\n                                );\n                            }\n\n                        })}\n                </div>\n\n            </div>\n\n\n        </div >\n    );\n}\n\nexport default Stock;\n","import { AxiosError, AxiosResponse } from 'axios';\nimport { error } from 'console';\nimport React, { useEffect, useState } from 'react';\n\n\nimport SidefillerLeft from '../../components/sidefiller/SidefillerLeft';\nimport SidefillerRight from '../../components/sidefiller/SidefillerRight';\n\n\n\nimport styles from './Profile.module.css';\n\n\nconst axios = require('axios');\n\nfunction Profile(props: any) {\n\n    const [renderedStockHistory, setRenderedStockHistory] = useState<Array<JSON | any>>([]);\n\n    const [stocksOrContracts, setStocksOrContracts] = useState<String>(\"stocks\");\n    const [salesOrPurchases, setSalesOrPurchases] = useState<String>(\"sales\");\n    const [filterBySymbol, setFilterBySymbol] = useState<String>();\n\n    const [stockSalesNet, setStockSalesNet] = useState<number>(0);\n    const [optionSalesNet, setOptionsSalesNet] = useState<number>(0);\n\n    const [loading, setLoading] = useState<boolean>(false);\n\n\n\n    useEffect(() => {\n        getHistory();\n    }, [stocksOrContracts, salesOrPurchases])\n\n\n    const getHistory = () => {\n        console.log('history called');\n\n        if (stocksOrContracts == \"stocks\") getUserStocks();\n        else getUserContracts();\n    }\n\n    /**\n     * Calls getUserStocks but with a filter which is optional\n     */\n    const getFilteredHistory = () => {\n        if (stocksOrContracts == \"stocks\") {\n            if (filterBySymbol != undefined && filterBySymbol.length == 0) {\n                getUserStocks();\n            } else {\n                getUserStocks(filterBySymbol)\n\n            }\n        }\n        else {\n            if (filterBySymbol != undefined && filterBySymbol.length) {\n                getUserContracts(filterBySymbol)\n            }\n            else {\n                getUserContracts()\n            }\n        }\n    }\n\n    const getUserStocks = (filter?: string | any) => {\n        if (props.currentUser != null) {\n\n            setLoading(true);\n\n            axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/getUserStockHistory\", {\n                params: {\n                    \"userId\": props.currentUser.user_id,\n                    \"salesOrPurchases\": salesOrPurchases,\n                    \"filter\": filterBySymbol\n                }\n            }).then((response: AxiosResponse) => {\n                console.log(response.data)\n                setRenderedStockHistory(response.data);\n\n                setLoading(false);\n\n                if (salesOrPurchases == \"sales\") {\n                    let sum: number = 0;\n                    for (let i = 0; i < response.data.length; i++) {\n                        sum += (Math.round(((response.data[i].price_at_sale * response.data[i].amt_sold)\n                            - (response.data[i].price_at_purchase * response.data[i].amt_sold)) * 100) / 100)\n                    }\n\n                    setStockSalesNet(sum);\n                }\n\n\n            }).catch((error: AxiosError) => {\n                console.log(error.response)\n\n                setLoading(false);\n\n            })\n        } else console.log(\"User not set\");\n    }\n\n    const getUserContracts = (filter?: string | any) => {\n        if (props.currentUser != null) {\n            setLoading(true);\n\n\n            axios.get(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/transaction/getUserContractHistory\", {\n                params: {\n                    \"userId\": props.currentUser.user_id,\n                    \"salesOrPurchases\": salesOrPurchases,\n                    \"filter\": filterBySymbol\n                }\n            }).then((response: AxiosResponse) => {\n                console.log(response.data)\n                setRenderedStockHistory(response.data);\n\n                setLoading(false);\n\n\n                if (salesOrPurchases == \"sales\") {\n                    let sum: number = 0;\n                    for (let i = 0; i < response.data.length; i++) {\n                        sum += ((response.data[i].price_at_sale * response.data[i].amt_sold)\n                            - (response.data[i].price_at_purchase * response.data[i].amt_sold))\n                    }\n\n                    setOptionsSalesNet(sum);\n                }\n            }).catch((error: AxiosError) => {\n                console.log(error.response)\n\n                setLoading(false);\n\n            })\n        } else console.log(\"User not set\");\n    }\n\n\n    return (\n\n        <div className={styles.Profile}>\n            <SidefillerLeft />\n            <div className={styles.UserContent}>\n                <div>\n                    <button className={styles.Button} onClick={() => {\n\n                        stocksOrContracts == \"stocks\" ? setStocksOrContracts(\"options\") : setStocksOrContracts(\"stocks\");\n                    }}>Show {stocksOrContracts == \"stocks\" ? \"options\" : \"stocks\"}</button>\n                    <button className={styles.Button} onClick={() => {\n                        salesOrPurchases == \"sales\" ? setSalesOrPurchases(\"purchases\") : setSalesOrPurchases(\"sales\");\n\n                    }}>Show {salesOrPurchases == \"sales\" ? \"purchases\" : \"sales\"}</button>\n                    <div>\n                        <input onChange={(e) => setFilterBySymbol(e.target.value)} placeholder={\"Filter by symbol?\"}></input>\n                        <button className={styles.Button} onClick={() => getFilteredHistory()}>Filter</button>\n                    </div>\n                </div>\n\n\n\n                {!loading ?\n\n                    <div className={styles.StockHistory}>\n\n                        {stocksOrContracts == \"stocks\" ?\n                            <div>\n                                <h3>Your stock {salesOrPurchases} history</h3>\n                                {salesOrPurchases == \"sales\" && <div>Net gain/loss: ${stockSalesNet}</div>}\n                                {renderedStockHistory.length != 0 && renderedStockHistory.map((position) => {\n                                    return (\n\n                                        salesOrPurchases == \"sales\" ?\n                                            <div>\n\n                                                <h3>{position.stock_symbol}</h3>\n                                                <div> Sold {position.amt_sold} shares on\n                                         {\" \" + (new Date(position.date_sold)).toDateString()} for ${position.price_at_sale} each</div>\n                                                <div>Initially purchased for ${position.price_at_purchase}</div>\n\n                                                <div> You {(position.price_at_sale - position.price_at_purchase) >= 0 ? \"profited\" : \"lost\"}\n                                                    {\" $\" + +(Math.round(((position.price_at_sale * position.amt_sold) - (position.price_at_purchase * position.amt_sold)) * 100) / 100)}</div>\n\n                                            </div>\n                                            :\n                                            <div>\n                                                <h3>{position.stock_symbol}</h3>\n                                                <div>Purchased {position.amt_of_purchase} shares on {(new Date(position.date_purchased)).toDateString()}</div>\n                                                <div> Each share cost ${position.price_at_purchase + \" \"}\n                                        for a total of ${Math.round(position.price_at_purchase * position.amt_of_purchase * 100) / 100}</div>\n                                                <div>{(position.amt_of_purchase - position.amt_sold) != 0\n                                                    ? \"You still have \" + (position.amt_of_purchase - position.amt_sold) + \" shares from this purchase\"\n                                                    : \"You have no remaining shares from this purchase\"}\n                                                </div>\n                                            </div>\n\n\n                                    )\n                                })}\n                            </div>\n\n                            :\n                            <div>\n                                <h3>Your contract {salesOrPurchases} history</h3>\n                                {salesOrPurchases == \"sales\" && <div>Net gain/loss: ${optionSalesNet}</div>}\n                                {renderedStockHistory.length != 0 &&\n                                    renderedStockHistory.map((position) => {\n                                        return (\n                                            salesOrPurchases == \"sales\" ?\n                                                <div>\n                                                    <h3>{position.option_symbol}</h3>\n                                                    <div> Sold {position.amt_sold} contracts on\n                                                        {\" \" + (new Date(position.date_sold)).toDateString()} for ${position.price_at_sale} each</div>\n                                                    <div>Initially purchased for ${position.price_at_purchase}</div>\n\n                                                    <div> You {(position.price_at_sale - position.price_at_purchase) >= 0 ? \"profited\" : \"lost\"}\n                                                        {\" $\" + +(Math.round(((position.price_at_sale * position.amt_sold)\n                                                            - (position.price_at_purchase * position.amt_sold)) * 100) / 100)}</div>\n\n                                                </div>\n                                                :\n                                                <div>\n                                                    <h3>{position.option_symbol}</h3>\n                                                    <div>Purchased {position.amt_of_contracts} contracts on\n                                                        {\" \" + (new Date(position.date_purchased)).toDateString()}</div>\n                                                    <div> Each contract cost ${position.price_at_purchase + \" \"}\n                                                        for a total of\n                                                        {\" $\" + Math.round(position.price_at_purchase * position.amt_of_contracts * 100) / 100}</div>\n                                                    <div>\n                                                        {(position.amt_of_contracts - position.amt_sold) != 0\n                                                            ? \"You still have \" + (position.amt_of_contracts - position.amt_sold) + \" contracts from this purchase\"\n                                                            : \"You have no remaining contracts from this purchase\"}\n                                                    </div>\n                                                </div>\n                                        );\n                                    })\n\n                                }\n\n\n                            </div>\n                        }\n\n\n\n\n\n\n                    </div>\n                    :\n\n                    (<div>Getting your history</div>)\n\n                }\n            </div>\n            <SidefillerRight />\n        </div >\n    );\n}\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react';\nimport Navbar from './components/navbar/Navbar';\n\nimport styles from \"./App.module.css\";\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport Register from './pages/Register/Register';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport UserFeed from './pages/UserFeed/UserFeed';\nimport Stock from './pages/Stock/Stock';\nimport Profile from './pages/Profile/Profile';\n\nconst cookieToken = require('./helper');\n\nconst axios = require('axios');\n\nfunction App() {\n\n  const [currentPage, setCurrentPage] = useState('home');\n\n  const [currentUser, setCurrentUser] = useState<JSON | any>({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //for when logging out \n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const [currentStockInFocus, setCurrentStockInFocus] = useState<string>();\n\n  useEffect(() => {\n\n    let token = cookieToken.getToken();\n\n    if (token != 'fail') {\n      setIsLoading(true);\n\n      logIn(token);\n\n    }\n  }, [])\n\n\n  const logIn = (token: string) => {\n\n    axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/user/loginWithToken\", {\n      token: token\n\n    }).then((response: AxiosResponse) => {\n      setCurrentUser(response.data[0]);\n      setCurrentPage('userfeed');\n      setIsLoggedIn(true);\n\n      setIsLoading(false);\n\n    }).catch((err: AxiosError) => {\n      alert(err);\n      setIsLoading(false);\n\n    })\n  }\n\n  /**\n   * Just like logIn, except does no updates except to currentUser\n   * @param token \n   */\n  const updateNavbar = (token: string) => {\n    axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/user/loginWithToken\", {\n      token: token\n\n    }).then((response: AxiosResponse) => {\n      setCurrentUser(response.data[0]);\n\n    }).catch((err: AxiosError) => {\n      alert(err);\n\n    })\n  }\n\n  //can be deleted now?\n  useEffect(() => {\n\n\n    if (JSON.stringify(currentUser) == '{}') {\n      setCurrentPage('home')\n      setIsLoggedIn(false);\n\n    } else if (currentPage == 'stock') {\n      setIsLoggedIn(true);\n\n    } else {\n      setCurrentPage('userfeed');\n      setIsLoggedIn(true);\n    }\n\n\n  }, [currentUser])\n\n\n\n\n\n  const logout = () => {\n    let token = cookieToken.getToken();\n\n    setIsLoading(true);\n\n    axios.post(\"https://wallstreet-bets-tycoon-backend.uc.r.appspot.com/user/logout\", {\n      token: token\n\n    }).then((response: AxiosResponse) => {\n      document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\";\n\n      setCurrentUser({});\n      setIsLoggedIn(false);\n      setCurrentPage('home');\n      setIsLoading(false);\n\n    }).catch((err: AxiosError) => {\n      alert(err.response);\n      setIsLoading(false);\n\n    })\n  }\n\n  if (isLoading) return (<div className={styles.LoadingDiv}>Loading</div>);\n\n  return (\n    <div className={styles.App}>\n      <Navbar isLoggedIn={isLoggedIn}\n        currentUser={currentUser}\n        logOut={() => logout()}\n        currentPage={currentPage}\n        setCurrentPage={(e: string) => setCurrentPage(e)}\n      />\n      <div>\n        {currentPage == \"home\" && <Home />}\n\n\n        {currentPage == \"login\" && <Login setUser={(e: JSON) => setCurrentUser(e)} />}\n        {currentPage == \"register\" && <Register />}\n\n        {currentPage == \"userfeed\" &&\n          <UserFeed\n            user={currentUser}\n            setCurrentStock={(e: string) => setCurrentStockInFocus(e)}\n            setCurrentPage={(e: string) => setCurrentPage(e)}\n            updateNavbar={() => updateNavbar(cookieToken.getToken())}\n          />}\n\n        {currentPage == \"stock\" &&\n          <Stock stock={currentStockInFocus}\n            updateNavbar={() => updateNavbar(cookieToken.getToken())}\n            currentUser={currentUser}\n          />}\n\n        {currentPage == \"profile\" &&\n          <Profile\n            currentUser={currentUser}\n          />}\n\n      </div>\n\n\n\n    </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentContainer\":\"Stock_ContentContainer__MHKgI\",\"Stock\":\"Stock_Stock__Buz5e\",\"ModalContainer\":\"Stock_ModalContainer__dFl7P\",\"Modal\":\"Stock_Modal__2TswF\",\"OptionsContainer\":\"Stock_OptionsContainer__21q9k\",\"Option\":\"Stock_Option__23FsC\",\"OptionType\":\"Stock_OptionType__1rV05\",\"PulledOptions\":\"Stock_PulledOptions__3YyU1\",\"container\":\"Stock_container__8OX5l\",\"StockData\":\"Stock_StockData__2NWeH\",\"DescriptionContainer\":\"Stock_DescriptionContainer__3GuxG\",\"OptionDetailsContainer\":\"Stock_OptionDetailsContainer__3GcO7\",\"Error\":\"Stock_Error__1oEjT\",\"Amt\":\"Stock_Amt__3yXLj\",\"Container\":\"Stock_Container__3T0nV\",\"StockPositions\":\"Stock_StockPositions__9y40j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__GXuIq\",\"Option\":\"Navbar_Option__2Een8\",\"OptionContainer\":\"Navbar_OptionContainer__1aMUN\",\"LoginRegisterContainer\":\"Navbar_LoginRegisterContainer__1JOaO\",\"HomeContainer\":\"Navbar_HomeContainer__ZRSTC\",\"Logo\":\"Navbar_Logo__xSw9j\",\"UserData\":\"Navbar_UserData__xfLvE\",\"Data\":\"Navbar_Data__1XCxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__1ihTB\",\"Content\":\"Home_Content__8VN5U\",\"Image\":\"Home_Image__1FUps\",\"CarouselDiv\":\"Home_CarouselDiv__1_oth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"Register_Register__PAeNT\",\"ContentContainer\":\"Register_ContentContainer__2VQ0S\",\"RegisterInputsContainer\":\"Register_RegisterInputsContainer__2Xb_o\",\"RegisterButton\":\"Register_RegisterButton__3Boxm\",\"ResponseDiv\":\"Register_ResponseDiv__ZsTkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__28ymq\",\"ContentContainer\":\"Login_ContentContainer__3aO9a\",\"LoginInputsContainer\":\"Login_LoginInputsContainer__yqxxx\",\"LoginButton\":\"Login_LoginButton__3f2Mo\",\"ResponseDiv\":\"Login_ResponseDiv__3dA-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserFeed\":\"UserFeed_UserFeed__1K3HB\",\"ContentContainer\":\"UserFeed_ContentContainer__2z7p0\",\"Searchbar\":\"UserFeed_Searchbar__15KQy\",\"SearchbarContainer\":\"UserFeed_SearchbarContainer__2Gq0J\",\"searchCaption\":\"UserFeed_searchCaption__3Fjj9\",\"PositionData\":\"UserFeed_PositionData__Wv5iq\",\"GoToButton\":\"UserFeed_GoToButton__iwCNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3EVGC\",\"UserContent\":\"Profile_UserContent__3lvOW\",\"StockHistory\":\"Profile_StockHistory__3hOk1\",\"Button\":\"Profile_Button__wMjy9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidefillerLeft\":\"Sidefiller_SidefillerLeft__2aJh6\",\"SidefillerRight\":\"Sidefiller_SidefillerRight__p7iCr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"App-header\":\"App_App-header__xLkWl\",\"App-link\":\"App_App-link__3FsH9\",\"LoadingDiv\":\"App_LoadingDiv__1R9EK\"};","/**\n * Returns the token from the cookies\n * or fail if no cookie with token\n */\nconst getToken = () => {\n\n    let cookies = document.cookie.split(';');\n    let ret = '';\n\n    if (cookies[0] != \"\") {\n        cookies.forEach((keyPair) => {\n            let subArray: Array<string> = keyPair.split('=');\n            let key: string = subArray[0].trim();\n            let value: string = subArray[1].trim();\n\n            if (key == \"token\") ret = value;\n        })\n    } else return 'fail';\n\n    return ret;\n}\n\nexport { getToken }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SellContainer\":\"Sell_SellContainer__kYfzm\"};"],"sourceRoot":""}